//
//  GameViewController.swift
//  Guided Missile
//
//  Created by William Hause on 12/8/22.
//
// ======== AdMob ========
// AdMob Guided Missile Asteroid Pulverizer
//   App ID:     ca-app-pub-2874026631625786~1694134703
//   Ad Unit ID: ca-app-pub-2874026631625786/1503127663
//   Ad Test ID: ca-app-pub-3940256099942544/4411468910
//   AdMob Tutorial: https://www.youtube.com/watch?v=TMj_3mQA39g
// Signing up for AdMob for Games - https://admob.google.com/home/games/
// ========================


import UIKit
import SpriteKit
//import GameplayKit
import GameKit // Needed for Leaderboard
import GoogleMobileAds // AdMob

var gInterstitial: GADInterstitialAd? // Global access to the GADInterstitialAd

class GameViewController: UIViewController, GADFullScreenContentDelegate {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // AdMob - Load the first ad in viewDidLoad, then future ads in adDidDismissFullScreenContent
        loadInterstitialAd()
        
        
// NOT USING THIS CODE GEnerated by xcode because we're creating a new GameScene in viewWillLayoutSubviews() below
//        if let view = self.view as! SKView? {
//            // Load the SKScene from 'GameScene.sks'
//            if let scene = SKScene(fileNamed: "GameScene") {
//                // Set the scale mode to scale to fit the window
//                scene.scaleMode = .aspectFill
//
//                // Present the scene
//                view.presentScene(scene)
//            }
//
//            view.ignoresSiblingOrder = true
//
//            view.showsFPS = true
//            view.showsNodeCount = true
//        }
    }
    
    // ADDED THIS method and Commented out the code in the 'viewDidLoad' method above.
    // We're setting this up in 'viewWillLayoutSubviews()' because we don't know the skView size in viewDidLoad()
    override func viewWillLayoutSubviews() {
        super.viewWillLayoutSubviews()
        let skView = self.view as! SKView
        if skView.scene == nil { // If the scene is nil, then we need to create our new Game scene
            if FOR_RELEASE {
                skView.showsFPS = false
                skView.showsNodeCount = false
            } else {
//                skView.showsFPS = true
//                skView.showsNodeCount = true
                skView.showsFPS = false
                skView.showsNodeCount = false // wdhx set to false to make screen shots and video
            }
            
            // Create a new GameScene becuse we're not using the GameScene generated by xcode when it created the project
            let gameScene = GameScene(size: skView.bounds.size)
            gameScene.scaleMode = .aspectFill
            
            skView.presentScene(gameScene)

            // Game Center - Leaderboard - Need to authenticate the user when the game starts up
            authenticateUser() // For Leaderboard
        }
    }

    // Game Center - Leaderboard - Need to authenticate the user when the game starts up
    //
    func authenticateUser() {
        let player = GKLocalPlayer.local
        player.authenticateHandler = { viewController, error in
            guard error == nil else {
                print(error?.localizedDescription ?? "")
                return
            }
            
            if viewController != nil {
                self.present(viewController!, animated: true, completion: nil)
            }
        }
    }

    override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
        if UIDevice.current.userInterfaceIdiom == .phone {
            return .allButUpsideDown
        } else {
            return .all
        }
    }

    override var prefersStatusBarHidden: Bool {
        return true
    }
    
    
    // MARK: Interstitial Ads - AdMob
    // Instrucitons to load and display Interstitial AdMob ads is here:
    // https://developers.google.com/admob/ios/interstitial
    

    /// Tells the delegate that the ad failed to present full screen content.
    /// Required by the GADFullScreenContentDelegate protocol
    func ad(_ ad: GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: Error) {
        MyLog.debug("AdMob Ad did fail to present full screen content.")
    }

    /// Tells the delegate that the ad will present full screen content.
    /// Required by the GADFullScreenContentDelegate protocol
    func adWillPresentFullScreenContent(_ ad: GADFullScreenPresentingAd) {
        MyLog.debug("AdMob Ad will present full screen content.")
    }

    /// Tells the delegate that the ad dismissed full screen content.
    /// Required by the GADFullScreenContentDelegate protocol
    func adDidDismissFullScreenContent(_ ad: GADFullScreenPresentingAd) {
        MyLog.debug("AdMob Ad did dismiss full screen content.")
        
        // AdMob - First ad was loaded in viewDidLoad, then future ads here in adDidDismissFullScreenContent
        loadInterstitialAd()

    }
    
    private func loadInterstitialAd() {
        var adMobUnitID = "ca-app-pub-3940256099942544/4411468910" // Ad Test ID
        if FOR_RELEASE { 
            adMobUnitID = "ca-app-pub-2874026631625786/1503127663" // Live Ad ID - Only for Release, not testing
        }
        let request = GADRequest() // AdMob
        GADInterstitialAd.load(withAdUnitID:adMobUnitID,
                                    request: request,
                          completionHandler: { [self] ad, error in
                            if let error = error {
                                MyLog.debug("ERROR: AdMob - Failed to load interstitial ad with error: \(error.localizedDescription)")
                                MyLog.debug("adMobUnitID: \(adMobUnitID)")
                              return
                            }
                            gInterstitial = ad
                            gInterstitial?.fullScreenContentDelegate = self
                            MyLog.debug("AdMob: Successfully Loaded an Interstitial ad")
                          }
        )
    }

    func DELETE_THIS_NOW_showInterstitialAd() {
        if gInterstitial != nil {
          gInterstitial!.present(fromRootViewController: self)
        } else {
            MyLog.debug("AdMob - Ad wasn't ready")
        }
    }
    
    // ^^^^^^^^^^^ Interstitial Ads ^^^^^^^^^^^^^^^^^

}


