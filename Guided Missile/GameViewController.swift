//
//  GameViewController.swift
//  Guided Missile
//
//  Created by William Hause on 12/8/22.
//

import UIKit
import SpriteKit
import GameplayKit

class GameViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()

// NOT USING THIS CODE GEnerated by xcode because we're creating a new GameScene in viewWillLayoutSubviews() below
//        if let view = self.view as! SKView? {
//            // Load the SKScene from 'GameScene.sks'
//            if let scene = SKScene(fileNamed: "GameScene") {
//                // Set the scale mode to scale to fit the window
//                scene.scaleMode = .aspectFill
//
//                // Present the scene
//                view.presentScene(scene)
//            }
//
//            view.ignoresSiblingOrder = true
//
//            view.showsFPS = true
//            view.showsNodeCount = true
//        }
    }
    
    // ADDED THIS method and Commented out the code in the 'viewDidLoad' method above.
    // We're setting this up in 'viewWillLayoutSubviews()' because we don't know the skView size in viewDidLoad()
    override func viewWillLayoutSubviews() {
        super.viewWillLayoutSubviews()
        MyLog.debug("viewWillLayoutSubview() called")
        let skView = self.view as! SKView
        if skView.scene == nil { // If the scene is nil, then we need to create our new Game scene
            MyLog.debug("viewWillLayoutSubview() creating new scene")
            skView.showsFPS = true
            skView.showsNodeCount = true
            
            // Create a new GameScene becuse we're not using the GameScene generated by xcode when it created the project
            let gameScene = GameScene(size: skView.bounds.size)
            gameScene.scaleMode = .aspectFill
            
            skView.presentScene(gameScene)
        }
    }


    override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
        if UIDevice.current.userInterfaceIdiom == .phone {
            return .allButUpsideDown
        } else {
            return .all
        }
    }

    override var prefersStatusBarHidden: Bool {
        return true
    }
}
